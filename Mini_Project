{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"Ok-kef3FV8wZ","executionInfo":{"status":"ok","timestamp":1671646686609,"user_tz":-330,"elapsed":406,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["import statistics as stats\n","import matplotlib as mat\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":[],"metadata":{"id":"_t3E_FHMMwqQ","executionInfo":{"status":"ok","timestamp":1671646688045,"user_tz":-330,"elapsed":749,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"mI9ysLIM4hpS","executionInfo":{"status":"ok","timestamp":1671646688046,"user_tz":-330,"elapsed":31,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"hqwmdy1H4HM-"}},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1671646688046,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"GZd_EgpkWLBN","outputId":"fc7c8d44-a727-43e1-c89a-5829b809971b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Channel  Region  Fresh   Milk  Grocery  Frozen  Detergents_Paper  \\\n","0         2       3  12669   9656     7561     214              2674   \n","1         2       3   7057   9810     9568    1762              3293   \n","2         2       3   6353   8808     7684    2405              3516   \n","3         1       3  13265   1196     4221    6404               507   \n","4         2       3  22615   5410     7198    3915              1777   \n","5         2       3   9413   8259     5126     666              1795   \n","6         2       3  12126   3199     6975     480              3140   \n","7         2       3   7579   4956     9426    1669              3321   \n","8         1       3   5963   3648     6192     425              1716   \n","9         2       3   6006  11093    18881    1159              7425   \n","10        2       3   3366   5403    12974    4400              5977   \n","11        2       3  13146   1124     4523    1420               549   \n","12        2       3  31714  12319    11757     287              3881   \n","13        2       3  21217   6208    14982    3095              6707   \n","14        2       3  24653   9465    12091     294              5058   \n","15        1       3  10253   1114     3821     397               964   \n","16        2       3   1020   8816    12121     134              4508   \n","17        1       3   5876   6157     2933     839               370   \n","18        2       3  18601   6327    10099    2205              2767   \n","19        1       3   7780   2495     9464     669              2518   \n","\n","    Delicassen  \n","0         1338  \n","1         1776  \n","2         7844  \n","3         1788  \n","4         5185  \n","5         1451  \n","6          545  \n","7         2566  \n","8          750  \n","9         2098  \n","10        1744  \n","11         497  \n","12        2931  \n","13         602  \n","14        2168  \n","15         412  \n","16        1080  \n","17        4478  \n","18        3181  \n","19         501  "],"text/html":["\n","  <div id=\"df-ff58e47b-c676-4c34-8883-41a1737700e9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Channel</th>\n","      <th>Region</th>\n","      <th>Fresh</th>\n","      <th>Milk</th>\n","      <th>Grocery</th>\n","      <th>Frozen</th>\n","      <th>Detergents_Paper</th>\n","      <th>Delicassen</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>12669</td>\n","      <td>9656</td>\n","      <td>7561</td>\n","      <td>214</td>\n","      <td>2674</td>\n","      <td>1338</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>7057</td>\n","      <td>9810</td>\n","      <td>9568</td>\n","      <td>1762</td>\n","      <td>3293</td>\n","      <td>1776</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>6353</td>\n","      <td>8808</td>\n","      <td>7684</td>\n","      <td>2405</td>\n","      <td>3516</td>\n","      <td>7844</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>13265</td>\n","      <td>1196</td>\n","      <td>4221</td>\n","      <td>6404</td>\n","      <td>507</td>\n","      <td>1788</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>22615</td>\n","      <td>5410</td>\n","      <td>7198</td>\n","      <td>3915</td>\n","      <td>1777</td>\n","      <td>5185</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>9413</td>\n","      <td>8259</td>\n","      <td>5126</td>\n","      <td>666</td>\n","      <td>1795</td>\n","      <td>1451</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>12126</td>\n","      <td>3199</td>\n","      <td>6975</td>\n","      <td>480</td>\n","      <td>3140</td>\n","      <td>545</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>7579</td>\n","      <td>4956</td>\n","      <td>9426</td>\n","      <td>1669</td>\n","      <td>3321</td>\n","      <td>2566</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>5963</td>\n","      <td>3648</td>\n","      <td>6192</td>\n","      <td>425</td>\n","      <td>1716</td>\n","      <td>750</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>6006</td>\n","      <td>11093</td>\n","      <td>18881</td>\n","      <td>1159</td>\n","      <td>7425</td>\n","      <td>2098</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3366</td>\n","      <td>5403</td>\n","      <td>12974</td>\n","      <td>4400</td>\n","      <td>5977</td>\n","      <td>1744</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>13146</td>\n","      <td>1124</td>\n","      <td>4523</td>\n","      <td>1420</td>\n","      <td>549</td>\n","      <td>497</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>31714</td>\n","      <td>12319</td>\n","      <td>11757</td>\n","      <td>287</td>\n","      <td>3881</td>\n","      <td>2931</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>21217</td>\n","      <td>6208</td>\n","      <td>14982</td>\n","      <td>3095</td>\n","      <td>6707</td>\n","      <td>602</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>24653</td>\n","      <td>9465</td>\n","      <td>12091</td>\n","      <td>294</td>\n","      <td>5058</td>\n","      <td>2168</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>10253</td>\n","      <td>1114</td>\n","      <td>3821</td>\n","      <td>397</td>\n","      <td>964</td>\n","      <td>412</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1020</td>\n","      <td>8816</td>\n","      <td>12121</td>\n","      <td>134</td>\n","      <td>4508</td>\n","      <td>1080</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>5876</td>\n","      <td>6157</td>\n","      <td>2933</td>\n","      <td>839</td>\n","      <td>370</td>\n","      <td>4478</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>18601</td>\n","      <td>6327</td>\n","      <td>10099</td>\n","      <td>2205</td>\n","      <td>2767</td>\n","      <td>3181</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>7780</td>\n","      <td>2495</td>\n","      <td>9464</td>\n","      <td>669</td>\n","      <td>2518</td>\n","      <td>501</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff58e47b-c676-4c34-8883-41a1737700e9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ff58e47b-c676-4c34-8883-41a1737700e9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ff58e47b-c676-4c34-8883-41a1737700e9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}],"source":["result = pd.read_csv('/Wholesale customers data.csv')\n","result.head(20)"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":381},"executionInfo":{"elapsed":29,"status":"ok","timestamp":1671646688046,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"zWOwXKoiZWmR","outputId":"e312307a-139f-44cc-eded-8835a74e6aec"},"outputs":[{"output_type":"stream","name":"stdout","text":["(440, 8)\n"]},{"output_type":"execute_result","data":{"text/plain":["          Channel      Region          Fresh          Milk       Grocery  \\\n","count  440.000000  440.000000     440.000000    440.000000    440.000000   \n","mean     1.322727    2.543182   12000.297727   5796.265909   7951.277273   \n","std      0.468052    0.774272   12647.328865   7380.377175   9503.162829   \n","min      1.000000    1.000000       3.000000     55.000000      3.000000   \n","25%      1.000000    2.000000    3127.750000   1533.000000   2153.000000   \n","50%      1.000000    3.000000    8504.000000   3627.000000   4755.500000   \n","75%      2.000000    3.000000   16933.750000   7190.250000  10655.750000   \n","max      2.000000    3.000000  112151.000000  73498.000000  92780.000000   \n","\n","             Frozen  Detergents_Paper    Delicassen  \n","count    440.000000        440.000000    440.000000  \n","mean    3071.931818       2881.493182   1524.870455  \n","std     4854.673333       4767.854448   2820.105937  \n","min       25.000000          3.000000      3.000000  \n","25%      742.250000        256.750000    408.250000  \n","50%     1526.000000        816.500000    965.500000  \n","75%     3554.250000       3922.000000   1820.250000  \n","max    60869.000000      40827.000000  47943.000000  "],"text/html":["\n","  <div id=\"df-19f737d5-ddb2-4826-a6b9-d6ed631d7151\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Channel</th>\n","      <th>Region</th>\n","      <th>Fresh</th>\n","      <th>Milk</th>\n","      <th>Grocery</th>\n","      <th>Frozen</th>\n","      <th>Detergents_Paper</th>\n","      <th>Delicassen</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>440.000000</td>\n","      <td>440.000000</td>\n","      <td>440.000000</td>\n","      <td>440.000000</td>\n","      <td>440.000000</td>\n","      <td>440.000000</td>\n","      <td>440.000000</td>\n","      <td>440.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.322727</td>\n","      <td>2.543182</td>\n","      <td>12000.297727</td>\n","      <td>5796.265909</td>\n","      <td>7951.277273</td>\n","      <td>3071.931818</td>\n","      <td>2881.493182</td>\n","      <td>1524.870455</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.468052</td>\n","      <td>0.774272</td>\n","      <td>12647.328865</td>\n","      <td>7380.377175</td>\n","      <td>9503.162829</td>\n","      <td>4854.673333</td>\n","      <td>4767.854448</td>\n","      <td>2820.105937</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>55.000000</td>\n","      <td>3.000000</td>\n","      <td>25.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>3127.750000</td>\n","      <td>1533.000000</td>\n","      <td>2153.000000</td>\n","      <td>742.250000</td>\n","      <td>256.750000</td>\n","      <td>408.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>8504.000000</td>\n","      <td>3627.000000</td>\n","      <td>4755.500000</td>\n","      <td>1526.000000</td>\n","      <td>816.500000</td>\n","      <td>965.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>16933.750000</td>\n","      <td>7190.250000</td>\n","      <td>10655.750000</td>\n","      <td>3554.250000</td>\n","      <td>3922.000000</td>\n","      <td>1820.250000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>112151.000000</td>\n","      <td>73498.000000</td>\n","      <td>92780.000000</td>\n","      <td>60869.000000</td>\n","      <td>40827.000000</td>\n","      <td>47943.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19f737d5-ddb2-4826-a6b9-d6ed631d7151')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-19f737d5-ddb2-4826-a6b9-d6ed631d7151 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-19f737d5-ddb2-4826-a6b9-d6ed631d7151');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["print(result.shape)\n","result.describe()"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":344},"executionInfo":{"elapsed":25,"status":"ok","timestamp":1671646688047,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"98v-BtgWc2tr","outputId":"eebe5503-f88d-4a52-d85e-ca859bcf8105"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Channel    Region     Fresh      Milk   Grocery    Frozen  \\\n","Channel           1.000000  0.062028 -0.169172  0.460720  0.608792 -0.202046   \n","Region            0.062028  1.000000  0.055287  0.032288  0.007696 -0.021044   \n","Fresh            -0.169172  0.055287  1.000000  0.100510 -0.011854  0.345881   \n","Milk              0.460720  0.032288  0.100510  1.000000  0.728335  0.123994   \n","Grocery           0.608792  0.007696 -0.011854  0.728335  1.000000 -0.040193   \n","Frozen           -0.202046 -0.021044  0.345881  0.123994 -0.040193  1.000000   \n","Detergents_Paper  0.636026 -0.001483 -0.101953  0.661816  0.924641 -0.131525   \n","Delicassen        0.056011  0.045212  0.244690  0.406368  0.205497  0.390947   \n","\n","                  Detergents_Paper  Delicassen  \n","Channel                   0.636026    0.056011  \n","Region                   -0.001483    0.045212  \n","Fresh                    -0.101953    0.244690  \n","Milk                      0.661816    0.406368  \n","Grocery                   0.924641    0.205497  \n","Frozen                   -0.131525    0.390947  \n","Detergents_Paper          1.000000    0.069291  \n","Delicassen                0.069291    1.000000  "],"text/html":["\n","  <div id=\"df-7b362f74-a258-41fc-bff0-968ff339363b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Channel</th>\n","      <th>Region</th>\n","      <th>Fresh</th>\n","      <th>Milk</th>\n","      <th>Grocery</th>\n","      <th>Frozen</th>\n","      <th>Detergents_Paper</th>\n","      <th>Delicassen</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Channel</th>\n","      <td>1.000000</td>\n","      <td>0.062028</td>\n","      <td>-0.169172</td>\n","      <td>0.460720</td>\n","      <td>0.608792</td>\n","      <td>-0.202046</td>\n","      <td>0.636026</td>\n","      <td>0.056011</td>\n","    </tr>\n","    <tr>\n","      <th>Region</th>\n","      <td>0.062028</td>\n","      <td>1.000000</td>\n","      <td>0.055287</td>\n","      <td>0.032288</td>\n","      <td>0.007696</td>\n","      <td>-0.021044</td>\n","      <td>-0.001483</td>\n","      <td>0.045212</td>\n","    </tr>\n","    <tr>\n","      <th>Fresh</th>\n","      <td>-0.169172</td>\n","      <td>0.055287</td>\n","      <td>1.000000</td>\n","      <td>0.100510</td>\n","      <td>-0.011854</td>\n","      <td>0.345881</td>\n","      <td>-0.101953</td>\n","      <td>0.244690</td>\n","    </tr>\n","    <tr>\n","      <th>Milk</th>\n","      <td>0.460720</td>\n","      <td>0.032288</td>\n","      <td>0.100510</td>\n","      <td>1.000000</td>\n","      <td>0.728335</td>\n","      <td>0.123994</td>\n","      <td>0.661816</td>\n","      <td>0.406368</td>\n","    </tr>\n","    <tr>\n","      <th>Grocery</th>\n","      <td>0.608792</td>\n","      <td>0.007696</td>\n","      <td>-0.011854</td>\n","      <td>0.728335</td>\n","      <td>1.000000</td>\n","      <td>-0.040193</td>\n","      <td>0.924641</td>\n","      <td>0.205497</td>\n","    </tr>\n","    <tr>\n","      <th>Frozen</th>\n","      <td>-0.202046</td>\n","      <td>-0.021044</td>\n","      <td>0.345881</td>\n","      <td>0.123994</td>\n","      <td>-0.040193</td>\n","      <td>1.000000</td>\n","      <td>-0.131525</td>\n","      <td>0.390947</td>\n","    </tr>\n","    <tr>\n","      <th>Detergents_Paper</th>\n","      <td>0.636026</td>\n","      <td>-0.001483</td>\n","      <td>-0.101953</td>\n","      <td>0.661816</td>\n","      <td>0.924641</td>\n","      <td>-0.131525</td>\n","      <td>1.000000</td>\n","      <td>0.069291</td>\n","    </tr>\n","    <tr>\n","      <th>Delicassen</th>\n","      <td>0.056011</td>\n","      <td>0.045212</td>\n","      <td>0.244690</td>\n","      <td>0.406368</td>\n","      <td>0.205497</td>\n","      <td>0.390947</td>\n","      <td>0.069291</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b362f74-a258-41fc-bff0-968ff339363b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7b362f74-a258-41fc-bff0-968ff339363b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7b362f74-a258-41fc-bff0-968ff339363b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}],"source":["result.corr() #correlation between two subject result"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24,"status":"ok","timestamp":1671646688047,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"nwbk3eg_c9Jf","outputId":"15c49bf9-babe-4fb8-9bbd-3b6b10d53abb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["7380.377174570842"]},"metadata":{},"execution_count":5}],"source":["stats.stdev(result.Milk)"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1671646688047,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"jrYMZrQydJ_z","outputId":"795768b7-06f7-4270-81ee-4b807ee3686e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["54469967.238926284"]},"metadata":{},"execution_count":6}],"source":["stats.variance(result.Milk)"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1671646688047,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"iyxn_m5rZsLT","outputId":"8791e0f8-dc25-455e-b2d1-82fd64876b27"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["5796.265909090909"]},"metadata":{},"execution_count":7}],"source":["stats.mean(result.Milk)"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1671646688048,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"Qo6rSJP-cXXl","outputId":"6c9310b2-b89c-4738-d01d-3228f0c34c63"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["3627.0"]},"metadata":{},"execution_count":8}],"source":["stats.median(result.Milk)"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1671646688048,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"gBfUtbH6dgo_","outputId":"d19cd5d8-45a8-4880-fdad-150143ab75a9"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.hist(result.Milk , color = 'grey', ec='green')\n","plt.show()"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1671646688048,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"la2n_QHBduQx","outputId":"10f3b3f9-d6c8-4f94-fdd9-d975332ef70a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.hist(result.Fresh,color='Black',ec='gold')\n","plt.show()"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":858,"status":"ok","timestamp":1671646688887,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"VXFUJZ9Ud-VI","outputId":"f4d833ce-38d5-4466-d729-1c02bd858218"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.hist([result.Milk,result.Fresh , result.Frozen])\n","plt.show()"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1671646688888,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"9MStKU3veRWW","outputId":"8c40adf5-7fbf-4446-ee30-2bf077a13d4b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(result.Milk ,result.Fresh , c='red')\n","plt.scatter(result.Fresh , result.Frozen , c='blue')\n","plt.show()"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1671646688888,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"QKRSKH_YeSXe","outputId":"b797e144-c348-47e4-9e73-7a4dfec2b044"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.boxplot(result.Milk)\n","plt.show()"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1671646688888,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"Pvw3QC5iYJJB","outputId":"b25451f3-8443-48eb-fd36-92d709032add"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.hist(['Milk','Frozen','Fresh'])\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"NrzE5MAVNFzM"},"source":["# **Regression**"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"q3-wRk7fEvHx","executionInfo":{"status":"ok","timestamp":1671646688889,"user_tz":-330,"elapsed":15,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["#Rgression\n","#-------------------------------------------------------------------------------------------------------------\n","#Part : 2 of project\n","# we can do linear regression usinh statsmodels.api package\n","# therefore import statsmodels.api as sm\n","# to get all x values use \" exdog \" i.e df.exdog and df.endog for y only for dataset \n","# imported form statsmodels.datasets"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"lTxeWvf88ZFU","executionInfo":{"status":"ok","timestamp":1671646690092,"user_tz":-330,"elapsed":1218,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["import statsmodels.api as sm\n","from statsmodels.datasets import cancer \n","import seaborn as sns"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"HnAqw2Xw1ugn","executionInfo":{"status":"ok","timestamp":1671646690092,"user_tz":-330,"elapsed":12,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["#Cancer Dataset"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"iCEL4PnRxYZ5","executionInfo":{"status":"ok","timestamp":1671646690092,"user_tz":-330,"elapsed":12,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["cancer_data = cancer.load()"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"TGKOHoeBxwWy","executionInfo":{"status":"ok","timestamp":1671646690092,"user_tz":-330,"elapsed":12,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["X = cancer_data.exog\n","Y = cancer_data.endog"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"elapsed":599,"status":"ok","timestamp":1671646690680,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"WYjTEu8IyXqX","outputId":"5d1556b9-f63f-49fb-a8f3-b5123754c8d3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7fbcf5390820>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(X,Y)"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"2h2RdJoT0fUM","executionInfo":{"status":"ok","timestamp":1671646690681,"user_tz":-330,"elapsed":33,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["model = sm.OLS(Y,X)\n","fit = model.fit ()"]},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"executionInfo":{"elapsed":32,"status":"ok","timestamp":1671646690681,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"qj1pFlDt0_B3","outputId":"04ef5719-07e6-4557-d621-4c47fd51eaf8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                 OLS Regression Results                                \n","=======================================================================================\n","Dep. Variable:                      y   R-squared (uncentered):                   0.960\n","Model:                            OLS   Adj. R-squared (uncentered):              0.960\n","Method:                 Least Squares   F-statistic:                              7161.\n","Date:                Wed, 21 Dec 2022   Prob (F-statistic):                   2.09e-211\n","Time:                        18:18:14   Log-Likelihood:                         -1198.3\n","No. Observations:                 301   AIC:                                      2399.\n","Df Residuals:                     300   BIC:                                      2402.\n","Df Model:                           1                                                  \n","Covariance Type:            nonrobust                                                  \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","x1             0.0036   4.21e-05     84.623      0.000       0.003       0.004\n","==============================================================================\n","Omnibus:                       69.228   Durbin-Watson:                   1.820\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1477.032\n","Skew:                           0.153   Prob(JB):                         0.00\n","Kurtosis:                      13.848   Cond. No.                         1.00\n","==============================================================================\n","\n","Notes:\n","[1] R² is computed without centering (uncentered) since the model does not contain a constant.\n","[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>            <td>y</td>        <th>  R-squared (uncentered):</th>      <td>   0.960</td> \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared (uncentered):</th> <td>   0.960</td> \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>          <td>   7161.</td> \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Wed, 21 Dec 2022</td> <th>  Prob (F-statistic):</th>          <td>2.09e-211</td>\n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>18:18:14</td>     <th>  Log-Likelihood:    </th>          <td> -1198.3</td> \n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td>   301</td>      <th>  AIC:               </th>          <td>   2399.</td> \n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td>   300</td>      <th>  BIC:               </th>          <td>   2402.</td> \n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>              <td> </td>    \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>              <td> </td>    \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","   <td></td>     <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>x1</th> <td>    0.0036</td> <td> 4.21e-05</td> <td>   84.623</td> <td> 0.000</td> <td>    0.003</td> <td>    0.004</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>69.228</td> <th>  Durbin-Watson:     </th> <td>   1.820</td>\n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>1477.032</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>          <td> 0.153</td> <th>  Prob(JB):          </th> <td>    0.00</td>\n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>      <td>13.848</td> <th>  Cond. No.          </th> <td>    1.00</td>\n","</tr>\n","</table><br/><br/>Notes:<br/>[1] R² is computed without centering (uncentered) since the model does not contain a constant.<br/>[2] Standard Errors assume that the covariance matrix of the errors is correctly specified."]},"metadata":{},"execution_count":22}],"source":["fit.summary()\n"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"BLwyzCd210l1","executionInfo":{"status":"ok","timestamp":1671646690682,"user_tz":-330,"elapsed":32,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["#REGRESSION\n","#Hiegth Wiegth dataset\n","#---------------------------------------------------------------------------------\n","df = pd.read_csv('/weight-height.csv')"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":32,"status":"ok","timestamp":1671646690682,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"SIi4AvhBE9rL","outputId":"c30c07a0-1801-4c67-96f6-61ea8e9d24ea"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Gender     Height      Weight\n","0   Male  73.847017  241.893563\n","1   Male  68.781904  162.310473\n","2   Male  74.110105  212.740856\n","3   Male  71.730978  220.042470\n","4   Male  69.881796  206.349801"],"text/html":["\n","  <div id=\"df-ccf8629f-a9d9-4221-8455-5684252d1662\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Male</td>\n","      <td>73.847017</td>\n","      <td>241.893563</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>68.781904</td>\n","      <td>162.310473</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>74.110105</td>\n","      <td>212.740856</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>71.730978</td>\n","      <td>220.042470</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Male</td>\n","      <td>69.881796</td>\n","      <td>206.349801</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ccf8629f-a9d9-4221-8455-5684252d1662')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ccf8629f-a9d9-4221-8455-5684252d1662 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ccf8629f-a9d9-4221-8455-5684252d1662');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}],"source":["df.head()"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":31,"status":"ok","timestamp":1671646690682,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"PdV3YNl-GNgG","outputId":"4b6701cb-651a-4c47-a3b8-7fc1ae2b982f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Gender    10000\n","Height    10000\n","Weight    10000\n","dtype: int64"]},"metadata":{},"execution_count":25}],"source":["df.count()"]},{"cell_type":"markdown","metadata":{"id":"el-zrCIVXaJh"},"source":[]},{"cell_type":"markdown","metadata":{"id":"a1l2v_9RWTwo"},"source":[]},{"cell_type":"code","execution_count":26,"metadata":{"id":"QBkWWRvvGc3y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671646690682,"user_tz":-330,"elapsed":27,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"6843e460-1eac-4522-f0ef-e26793543b4a"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10000 entries, 0 to 9999\n","Data columns (total 3 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Gender  10000 non-null  object \n"," 1   Height  10000 non-null  float64\n"," 2   Weight  10000 non-null  float64\n","dtypes: float64(2), object(1)\n","memory usage: 234.5+ KB\n"]}],"source":["df.info()"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"AKAw0gIFq5nk","executionInfo":{"status":"ok","timestamp":1671646690683,"user_tz":-330,"elapsed":26,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["x=np.array(df['Height'])\n","y = np.array(df['Weight'])"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":26,"status":"ok","timestamp":1671646690683,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"hB1ymMtUwSzs","outputId":"82f7d098-4ecc-4125-f30c-b1c2ffa9b3fe"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(x,y)\n","plt.show()"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"KciPtNxg22Qs","executionInfo":{"status":"ok","timestamp":1671646690683,"user_tz":-330,"elapsed":25,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["M = sm.OLS(x,y)\n","fit = M.fit()"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"executionInfo":{"elapsed":25,"status":"ok","timestamp":1671646690683,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"kmUNNF_-3fSV","outputId":"abf9ea97-eee8-48ca-d407-5ac7b53a3a87"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                 OLS Regression Results                                \n","=======================================================================================\n","Dep. Variable:                      y   R-squared (uncentered):                   0.979\n","Model:                            OLS   Adj. R-squared (uncentered):              0.979\n","Method:                 Least Squares   F-statistic:                          4.726e+05\n","Date:                Wed, 21 Dec 2022   Prob (F-statistic):                        0.00\n","Time:                        18:18:14   Log-Likelihood:                         -36774.\n","No. Observations:               10000   AIC:                                  7.355e+04\n","Df Residuals:                    9999   BIC:                                  7.356e+04\n","Df Model:                           1                                                  \n","Covariance Type:            nonrobust                                                  \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","x1             0.3997      0.001    687.489      0.000       0.399       0.401\n","==============================================================================\n","Omnibus:                      980.306   Durbin-Watson:                   0.671\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):              288.234\n","Skew:                          -0.020   Prob(JB):                     2.57e-63\n","Kurtosis:                       2.169   Cond. No.                         1.00\n","==============================================================================\n","\n","Notes:\n","[1] R² is computed without centering (uncentered) since the model does not contain a constant.\n","[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>            <td>y</td>        <th>  R-squared (uncentered):</th>      <td>   0.979</td> \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared (uncentered):</th> <td>   0.979</td> \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>          <td>4.726e+05</td>\n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Wed, 21 Dec 2022</td> <th>  Prob (F-statistic):</th>           <td>  0.00</td>  \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>18:18:14</td>     <th>  Log-Likelihood:    </th>          <td> -36774.</td> \n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 10000</td>      <th>  AIC:               </th>          <td>7.355e+04</td>\n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td>  9999</td>      <th>  BIC:               </th>          <td>7.356e+04</td>\n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>              <td> </td>    \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>              <td> </td>    \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","   <td></td>     <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>x1</th> <td>    0.3997</td> <td>    0.001</td> <td>  687.489</td> <td> 0.000</td> <td>    0.399</td> <td>    0.401</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>980.306</td> <th>  Durbin-Watson:     </th> <td>   0.671</td>\n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td> 288.234</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>          <td>-0.020</td>  <th>  Prob(JB):          </th> <td>2.57e-63</td>\n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>      <td> 2.169</td>  <th>  Cond. No.          </th> <td>    1.00</td>\n","</tr>\n","</table><br/><br/>Notes:<br/>[1] R² is computed without centering (uncentered) since the model does not contain a constant.<br/>[2] Standard Errors assume that the covariance matrix of the errors is correctly specified."]},"metadata":{},"execution_count":30}],"source":["fit.summary()"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"elapsed":686,"status":"ok","timestamp":1671646691345,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"PH-KgrAC465e","outputId":"bcc4220c-eead-48a3-b156-8ff86ed0fe96"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["sns.heatmap(df.corr())\n","plt.show()"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"nfhCKVRD7ELC","executionInfo":{"status":"ok","timestamp":1671646691345,"user_tz":-330,"elapsed":16,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"5sBZoKzUMwQ3"},"source":["# **Linear Discriminant Analysis**"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"NPibDB9C9MXG","executionInfo":{"status":"ok","timestamp":1671646691345,"user_tz":-330,"elapsed":15,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["# for Lda we will need important library i.e sklearn\n","# skleran will be required for 1) Datasets \n","#                              2) Linear discriminant analysis"]},{"cell_type":"code","execution_count":33,"metadata":{"id":"IImWRIyF8P77","executionInfo":{"status":"ok","timestamp":1671646691346,"user_tz":-330,"elapsed":16,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["from sklearn import datasets\n","from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"OJSrNT1S_F43","executionInfo":{"status":"ok","timestamp":1671646691346,"user_tz":-330,"elapsed":16,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["data = datasets.load_diabetes()"]},{"cell_type":"code","execution_count":35,"metadata":{"id":"XuObjyLx_o4I","executionInfo":{"status":"ok","timestamp":1671646691346,"user_tz":-330,"elapsed":16,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["\n","X =data['data']\n","y = data['target']"]},{"cell_type":"code","execution_count":36,"metadata":{"executionInfo":{"elapsed":43,"status":"ok","timestamp":1671646692780,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"9xxN4hBW_7ng","colab":{"base_uri":"https://localhost:8080/"},"outputId":"83db9aef-9662-4d8c-eafd-e03c4f594b9e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['age', 'sex', 'bmi', 'bp', 's1', 's2', 's3', 's4', 's5', 's6']"]},"metadata":{},"execution_count":36}],"source":["data['feature_names']"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"tzUQbDMd_YKh","executionInfo":{"status":"ok","timestamp":1671646692781,"user_tz":-330,"elapsed":43,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["lda = LDA(n_components=2)"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"ztHu7zIuD4cY","executionInfo":{"status":"ok","timestamp":1671646692781,"user_tz":-330,"elapsed":43,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["fit = lda.fit(X,y)\n","z = fit.transform(X)"]},{"cell_type":"code","execution_count":39,"metadata":{"executionInfo":{"elapsed":44,"status":"ok","timestamp":1671646692782,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"poByOxQEvVxZ","colab":{"base_uri":"https://localhost:8080/"},"outputId":"34522dd7-e916-4934-8560-0d74f604ed85"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.3665158371040724"]},"metadata":{},"execution_count":39}],"source":["lda.score(X,y)"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"PjJaIlorMQcs","executionInfo":{"status":"ok","timestamp":1671646692782,"user_tz":-330,"elapsed":42,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["yhat= lda.predict_proba(X)"]},{"cell_type":"code","execution_count":41,"metadata":{"executionInfo":{"elapsed":42,"status":"ok","timestamp":1671646692782,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"DSxdH3L9McG1","colab":{"base_uri":"https://localhost:8080/"},"outputId":"277871c2-e07d-4500-c9fb-e3e20ef7cb4a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.27217353e-03, 4.72137234e-05, 8.24935676e-06, ...,\n","        3.55531371e-03, 1.65309426e-07, 1.75981316e-06],\n","       [3.62064162e-04, 5.31800403e-04, 7.99167706e-03, ...,\n","        3.26555854e-10, 3.81916673e-11, 1.75649749e-12],\n","       [6.44129958e-04, 4.22990386e-04, 4.62978462e-05, ...,\n","        3.55913269e-04, 7.20635657e-07, 2.23278808e-07],\n","       ...,\n","       [1.14498900e-03, 1.57888454e-03, 1.05162394e-04, ...,\n","        3.80155994e-06, 2.62936799e-10, 1.54281720e-11],\n","       [6.37817418e-03, 2.34537004e-05, 1.26910067e-05, ...,\n","        2.06382252e-05, 4.76645188e-09, 1.08788019e-05],\n","       [1.41068258e-10, 2.76108277e-12, 7.12646057e-08, ...,\n","        1.57699618e-15, 4.48142525e-18, 1.65153202e-16]])"]},"metadata":{},"execution_count":41}],"source":["yhat"]},{"cell_type":"code","execution_count":42,"metadata":{"executionInfo":{"elapsed":42,"status":"ok","timestamp":1671646692783,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"ridwHxT7I45a","colab":{"base_uri":"https://localhost:8080/","height":265},"outputId":"5efd364a-4911-413e-ea39-a798bc05770f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(z[:,0],z[:,1],c=y ) # c=y refers the target\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"eDPxlZpOMTJ7"},"source":["# **Principle Component Analysis**"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"rrcN1sYzSbHU","executionInfo":{"status":"ok","timestamp":1671646692783,"user_tz":-330,"elapsed":40,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["from sklearn.datasets import load_breast_cancer"]},{"cell_type":"code","execution_count":44,"metadata":{"id":"5LAKxMSvLW6B","executionInfo":{"status":"ok","timestamp":1671646692783,"user_tz":-330,"elapsed":40,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["cancer = load_breast_cancer()"]},{"cell_type":"code","execution_count":45,"metadata":{"executionInfo":{"elapsed":41,"status":"ok","timestamp":1671646692784,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"2e1iXa2jLelD","colab":{"base_uri":"https://localhost:8080/"},"outputId":"079c971d-f9dc-49d6-b615-34eaffad0eff"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys(['data', 'target', 'frame', 'target_names', 'DESCR', 'feature_names', 'filename', 'data_module'])"]},"metadata":{},"execution_count":45}],"source":["cancer.keys()"]},{"cell_type":"code","execution_count":46,"metadata":{"executionInfo":{"elapsed":39,"status":"ok","timestamp":1671646692784,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"lr8TFEpDLmj3","colab":{"base_uri":"https://localhost:8080/"},"outputId":"5d6e2a78-340e-4919-890a-af34a7adf519"},"outputs":[{"output_type":"stream","name":"stdout","text":[".. _breast_cancer_dataset:\n","\n","Breast cancer wisconsin (diagnostic) dataset\n","--------------------------------------------\n","\n","**Data Set Characteristics:**\n","\n","    :Number of Instances: 569\n","\n","    :Number of Attributes: 30 numeric, predictive attributes and the class\n","\n","    :Attribute Information:\n","        - radius (mean of distances from center to points on the perimeter)\n","        - texture (standard deviation of gray-scale values)\n","        - perimeter\n","        - area\n","        - smoothness (local variation in radius lengths)\n","        - compactness (perimeter^2 / area - 1.0)\n","        - concavity (severity of concave portions of the contour)\n","        - concave points (number of concave portions of the contour)\n","        - symmetry\n","        - fractal dimension (\"coastline approximation\" - 1)\n","\n","        The mean, standard error, and \"worst\" or largest (mean of the three\n","        worst/largest values) of these features were computed for each image,\n","        resulting in 30 features.  For instance, field 0 is Mean Radius, field\n","        10 is Radius SE, field 20 is Worst Radius.\n","\n","        - class:\n","                - WDBC-Malignant\n","                - WDBC-Benign\n","\n","    :Summary Statistics:\n","\n","    ===================================== ====== ======\n","                                           Min    Max\n","    ===================================== ====== ======\n","    radius (mean):                        6.981  28.11\n","    texture (mean):                       9.71   39.28\n","    perimeter (mean):                     43.79  188.5\n","    area (mean):                          143.5  2501.0\n","    smoothness (mean):                    0.053  0.163\n","    compactness (mean):                   0.019  0.345\n","    concavity (mean):                     0.0    0.427\n","    concave points (mean):                0.0    0.201\n","    symmetry (mean):                      0.106  0.304\n","    fractal dimension (mean):             0.05   0.097\n","    radius (standard error):              0.112  2.873\n","    texture (standard error):             0.36   4.885\n","    perimeter (standard error):           0.757  21.98\n","    area (standard error):                6.802  542.2\n","    smoothness (standard error):          0.002  0.031\n","    compactness (standard error):         0.002  0.135\n","    concavity (standard error):           0.0    0.396\n","    concave points (standard error):      0.0    0.053\n","    symmetry (standard error):            0.008  0.079\n","    fractal dimension (standard error):   0.001  0.03\n","    radius (worst):                       7.93   36.04\n","    texture (worst):                      12.02  49.54\n","    perimeter (worst):                    50.41  251.2\n","    area (worst):                         185.2  4254.0\n","    smoothness (worst):                   0.071  0.223\n","    compactness (worst):                  0.027  1.058\n","    concavity (worst):                    0.0    1.252\n","    concave points (worst):               0.0    0.291\n","    symmetry (worst):                     0.156  0.664\n","    fractal dimension (worst):            0.055  0.208\n","    ===================================== ====== ======\n","\n","    :Missing Attribute Values: None\n","\n","    :Class Distribution: 212 - Malignant, 357 - Benign\n","\n","    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\n","\n","    :Donor: Nick Street\n","\n","    :Date: November, 1995\n","\n","This is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\n","https://goo.gl/U2Uwz2\n","\n","Features are computed from a digitized image of a fine needle\n","aspirate (FNA) of a breast mass.  They describe\n","characteristics of the cell nuclei present in the image.\n","\n","Separating plane described above was obtained using\n","Multisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\n","Construction Via Linear Programming.\" Proceedings of the 4th\n","Midwest Artificial Intelligence and Cognitive Science Society,\n","pp. 97-101, 1992], a classification method which uses linear\n","programming to construct a decision tree.  Relevant features\n","were selected using an exhaustive search in the space of 1-4\n","features and 1-3 separating planes.\n","\n","The actual linear program used to obtain the separating plane\n","in the 3-dimensional space is that described in:\n","[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\n","Programming Discrimination of Two Linearly Inseparable Sets\",\n","Optimization Methods and Software 1, 1992, 23-34].\n","\n","This database is also available through the UW CS ftp server:\n","\n","ftp ftp.cs.wisc.edu\n","cd math-prog/cpo-dataset/machine-learn/WDBC/\n","\n",".. topic:: References\n","\n","   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction \n","     for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on \n","     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\n","     San Jose, CA, 1993.\n","   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and \n","     prognosis via linear programming. Operations Research, 43(4), pages 570-577, \n","     July-August 1995.\n","   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\n","     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) \n","     163-171.\n"]}],"source":["print(cancer['DESCR'])"]},{"cell_type":"markdown","metadata":{"id":"AIQZ6iU3NvBB"},"source":["Acorrding to discription there are 30 atrributes and we need to convert it to 2 i.e '0'  Or '1'.\n","that is present or not \n","\n","It consist of 560 data values i,e cols"]},{"cell_type":"code","execution_count":47,"metadata":{"id":"T_yvG7lnXJk7","executionInfo":{"status":"ok","timestamp":1671646692784,"user_tz":-330,"elapsed":38,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["dataframe=pd.DataFrame(cancer['data'],columns=cancer['feature_names'])"]},{"cell_type":"code","execution_count":48,"metadata":{"executionInfo":{"elapsed":38,"status":"ok","timestamp":1671646692785,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"jHaRLKiYX_3O","colab":{"base_uri":"https://localhost:8080/","height":334},"outputId":"40bd668c-e118-4c5b-e452-205decada407"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n","0        17.99         10.38          122.80     1001.0          0.11840   \n","1        20.57         17.77          132.90     1326.0          0.08474   \n","2        19.69         21.25          130.00     1203.0          0.10960   \n","3        11.42         20.38           77.58      386.1          0.14250   \n","4        20.29         14.34          135.10     1297.0          0.10030   \n","\n","   mean compactness  mean concavity  mean concave points  mean symmetry  \\\n","0           0.27760          0.3001              0.14710         0.2419   \n","1           0.07864          0.0869              0.07017         0.1812   \n","2           0.15990          0.1974              0.12790         0.2069   \n","3           0.28390          0.2414              0.10520         0.2597   \n","4           0.13280          0.1980              0.10430         0.1809   \n","\n","   mean fractal dimension  ...  worst radius  worst texture  worst perimeter  \\\n","0                 0.07871  ...         25.38          17.33           184.60   \n","1                 0.05667  ...         24.99          23.41           158.80   \n","2                 0.05999  ...         23.57          25.53           152.50   \n","3                 0.09744  ...         14.91          26.50            98.87   \n","4                 0.05883  ...         22.54          16.67           152.20   \n","\n","   worst area  worst smoothness  worst compactness  worst concavity  \\\n","0      2019.0            0.1622             0.6656           0.7119   \n","1      1956.0            0.1238             0.1866           0.2416   \n","2      1709.0            0.1444             0.4245           0.4504   \n","3       567.7            0.2098             0.8663           0.6869   \n","4      1575.0            0.1374             0.2050           0.4000   \n","\n","   worst concave points  worst symmetry  worst fractal dimension  \n","0                0.2654          0.4601                  0.11890  \n","1                0.1860          0.2750                  0.08902  \n","2                0.2430          0.3613                  0.08758  \n","3                0.2575          0.6638                  0.17300  \n","4                0.1625          0.2364                  0.07678  \n","\n","[5 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-47b1558f-93f6-4b5b-9a75-30a1a2b76246\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean radius</th>\n","      <th>mean texture</th>\n","      <th>mean perimeter</th>\n","      <th>mean area</th>\n","      <th>mean smoothness</th>\n","      <th>mean compactness</th>\n","      <th>mean concavity</th>\n","      <th>mean concave points</th>\n","      <th>mean symmetry</th>\n","      <th>mean fractal dimension</th>\n","      <th>...</th>\n","      <th>worst radius</th>\n","      <th>worst texture</th>\n","      <th>worst perimeter</th>\n","      <th>worst area</th>\n","      <th>worst smoothness</th>\n","      <th>worst compactness</th>\n","      <th>worst concavity</th>\n","      <th>worst concave points</th>\n","      <th>worst symmetry</th>\n","      <th>worst fractal dimension</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.3001</td>\n","      <td>0.14710</td>\n","      <td>0.2419</td>\n","      <td>0.07871</td>\n","      <td>...</td>\n","      <td>25.38</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.0869</td>\n","      <td>0.07017</td>\n","      <td>0.1812</td>\n","      <td>0.05667</td>\n","      <td>...</td>\n","      <td>24.99</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.1238</td>\n","      <td>0.1866</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.1974</td>\n","      <td>0.12790</td>\n","      <td>0.2069</td>\n","      <td>0.05999</td>\n","      <td>...</td>\n","      <td>23.57</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.1444</td>\n","      <td>0.4245</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.2414</td>\n","      <td>0.10520</td>\n","      <td>0.2597</td>\n","      <td>0.09744</td>\n","      <td>...</td>\n","      <td>14.91</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.2098</td>\n","      <td>0.8663</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.1980</td>\n","      <td>0.10430</td>\n","      <td>0.1809</td>\n","      <td>0.05883</td>\n","      <td>...</td>\n","      <td>22.54</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.1374</td>\n","      <td>0.2050</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 30 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47b1558f-93f6-4b5b-9a75-30a1a2b76246')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-47b1558f-93f6-4b5b-9a75-30a1a2b76246 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-47b1558f-93f6-4b5b-9a75-30a1a2b76246');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}],"source":["dataframe.head()"]},{"cell_type":"markdown","metadata":{"id":"8e_Xyg2tYy63"},"source":["Now we have to preprocess the data before applying PCA\n","\n","\n","which can be done using 'StandardScaler' Or\n","'MeanMaxScaler' "]},{"cell_type":"code","execution_count":49,"metadata":{"id":"Vh1MtwTqZnjc","executionInfo":{"status":"ok","timestamp":1671646692785,"user_tz":-330,"elapsed":38,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["from sklearn.preprocessing import StandardScaler"]},{"cell_type":"markdown","metadata":{"id":"q9NsV85-bZ4_"},"source":[]},{"cell_type":"code","execution_count":50,"metadata":{"id":"OmIPV2CcabOm","executionInfo":{"status":"ok","timestamp":1671646692785,"user_tz":-330,"elapsed":38,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["scaler = StandardScaler()\n","scaler.fit(dataframe)\n","scaled_data = scaler.transform(dataframe)"]},{"cell_type":"code","execution_count":51,"metadata":{"executionInfo":{"elapsed":38,"status":"ok","timestamp":1671646692786,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"t_crwIMxaz9u","colab":{"base_uri":"https://localhost:8080/"},"outputId":"5d54aef3-663c-47c6-c9f2-c8fbdf18f2cb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(569, 30)"]},"metadata":{},"execution_count":51}],"source":["scaled_data.shape"]},{"cell_type":"markdown","metadata":{"id":"w9EXprpyeE9B"},"source":["After Preprocessing import PCA from Sklearn.decomposition"]},{"cell_type":"code","execution_count":52,"metadata":{"id":"UKMupSC6eCZv","executionInfo":{"status":"ok","timestamp":1671646692786,"user_tz":-330,"elapsed":35,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["from sklearn.decomposition import PCA"]},{"cell_type":"code","execution_count":53,"metadata":{"id":"uTVrsiQuecCx","executionInfo":{"status":"ok","timestamp":1671646692786,"user_tz":-330,"elapsed":35,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["pca = PCA(n_components=2)"]},{"cell_type":"code","execution_count":54,"metadata":{"id":"-A9guFfPeoFa","executionInfo":{"status":"ok","timestamp":1671646692787,"user_tz":-330,"elapsed":36,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["Fit = pca.fit(scaled_data)"]},{"cell_type":"code","execution_count":55,"metadata":{"id":"jHJoYtUFfyKW","executionInfo":{"status":"ok","timestamp":1671646692787,"user_tz":-330,"elapsed":35,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"outputs":[],"source":["pca_x = Fit.transform(scaled_data)"]},{"cell_type":"code","execution_count":56,"metadata":{"executionInfo":{"elapsed":35,"status":"ok","timestamp":1671646692787,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"u7OIXgIvhV8C","colab":{"base_uri":"https://localhost:8080/"},"outputId":"d7702c1c-2087-490d-8dd7-ea765b26b99a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(569, 2)"]},"metadata":{},"execution_count":56}],"source":["pca_x.shape"]},{"cell_type":"code","execution_count":57,"metadata":{"executionInfo":{"elapsed":35,"status":"ok","timestamp":1671646692788,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"},"user_tz":-330},"id":"diL2LerdiCD_","colab":{"base_uri":"https://localhost:8080/","height":265},"outputId":"c025a939-a7b8-4fe9-fc4c-bc5fb3d5b6ba"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(pca_x[:,0],pca_x[:,1],c=cancer['target'])\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"4CdGUNiHj6Vq"},"source":["# **Factor Analysis**"]},{"cell_type":"code","source":["pip install factor_analyzer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W6ioWqwdxyPZ","executionInfo":{"status":"ok","timestamp":1671646707580,"user_tz":-330,"elapsed":14826,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"0f745d21-574b-40f6-fd5d-672b47fba33d"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting factor_analyzer\n","  Downloading factor_analyzer-0.4.1.tar.gz (41 kB)\n","\u001b[K     |████████████████████████████████| 41 kB 767 kB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.8/dist-packages (from factor_analyzer) (1.0.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from factor_analyzer) (1.21.6)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.8/dist-packages (from factor_analyzer) (1.3.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from factor_analyzer) (1.7.3)\n","Collecting pre-commit\n","  Downloading pre_commit-2.20.0-py2.py3-none-any.whl (199 kB)\n","\u001b[K     |████████████████████████████████| 199 kB 15.1 MB/s \n","\u001b[?25hRequirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/dist-packages (from pandas->factor_analyzer) (2.8.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas->factor_analyzer) (2022.6)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.8/dist-packages (from python-dateutil>=2.7.3->pandas->factor_analyzer) (1.15.0)\n","Collecting identify>=1.0.0\n","  Downloading identify-2.5.11-py2.py3-none-any.whl (98 kB)\n","\u001b[K     |████████████████████████████████| 98 kB 8.7 MB/s \n","\u001b[?25hCollecting nodeenv>=0.11.1\n","  Downloading nodeenv-1.7.0-py2.py3-none-any.whl (21 kB)\n","Collecting cfgv>=2.0.0\n","  Downloading cfgv-3.3.1-py2.py3-none-any.whl (7.3 kB)\n","Collecting virtualenv>=20.0.8\n","  Downloading virtualenv-20.17.1-py3-none-any.whl (8.8 MB)\n","\u001b[K     |████████████████████████████████| 8.8 MB 53.8 MB/s \n","\u001b[?25hRequirement already satisfied: toml in /usr/local/lib/python3.8/dist-packages (from pre-commit->factor_analyzer) (0.10.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.8/dist-packages (from pre-commit->factor_analyzer) (6.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.8/dist-packages (from nodeenv>=0.11.1->pre-commit->factor_analyzer) (57.4.0)\n","Collecting distlib<1,>=0.3.6\n","  Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n","\u001b[K     |████████████████████████████████| 468 kB 86.4 MB/s \n","\u001b[?25hRequirement already satisfied: filelock<4,>=3.4.1 in /usr/local/lib/python3.8/dist-packages (from virtualenv>=20.0.8->pre-commit->factor_analyzer) (3.8.2)\n","Requirement already satisfied: platformdirs<3,>=2.4 in /usr/local/lib/python3.8/dist-packages (from virtualenv>=20.0.8->pre-commit->factor_analyzer) (2.6.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from scikit-learn->factor_analyzer) (3.1.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.8/dist-packages (from scikit-learn->factor_analyzer) (1.2.0)\n","Building wheels for collected packages: factor-analyzer\n","  Building wheel for factor-analyzer (PEP 517) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for factor-analyzer: filename=factor_analyzer-0.4.1-py2.py3-none-any.whl size=42034 sha256=106344d4ea69f898c4b6da4f4a4d398d2f98ceb5a101f55e8bf44afa45806dbf\n","  Stored in directory: /root/.cache/pip/wheels/f5/8f/2e/a689c21bc4bf04f84ceebf4b1f5846cacc04bfe179e7ad5ab0\n","Successfully built factor-analyzer\n","Installing collected packages: distlib, virtualenv, nodeenv, identify, cfgv, pre-commit, factor-analyzer\n","Successfully installed cfgv-3.3.1 distlib-0.3.6 factor-analyzer-0.4.1 identify-2.5.11 nodeenv-1.7.0 pre-commit-2.20.0 virtualenv-20.17.1\n"]}]},{"cell_type":"code","source":["from factor_analyzer import FactorAnalyzer as FA"],"metadata":{"id":"CPeWSbl_ydVR","executionInfo":{"status":"ok","timestamp":1671646708287,"user_tz":-330,"elapsed":718,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["bifi = pd.read_csv('/bfi.csv')"],"metadata":{"id":"bD7iI1MFrUBa","executionInfo":{"status":"ok","timestamp":1671646708287,"user_tz":-330,"elapsed":19,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["bifi.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"SNskCGfPrwZm","executionInfo":{"status":"ok","timestamp":1671646708288,"user_tz":-330,"elapsed":20,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"b5368244-605c-4064-9104-d9b74e2121a7"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0   A1   A2   A3   A4   A5   C1   C2   C3   C4  ...   N4   N5  \\\n","0       61617  2.0  4.0  3.0  4.0  4.0  2.0  3.0  3.0  4.0  ...  2.0  3.0   \n","1       61618  2.0  4.0  5.0  2.0  5.0  5.0  4.0  4.0  3.0  ...  5.0  5.0   \n","2       61620  5.0  4.0  5.0  4.0  4.0  4.0  5.0  4.0  2.0  ...  2.0  3.0   \n","3       61621  4.0  4.0  6.0  5.0  5.0  4.0  4.0  3.0  5.0  ...  4.0  1.0   \n","4       61622  2.0  3.0  3.0  4.0  5.0  4.0  4.0  5.0  3.0  ...  4.0  3.0   \n","\n","    O1  O2   O3   O4   O5  gender  education  age  \n","0  3.0   6  3.0  4.0  3.0       1        NaN   16  \n","1  4.0   2  4.0  3.0  3.0       2        NaN   18  \n","2  4.0   2  5.0  5.0  2.0       2        NaN   17  \n","3  3.0   3  4.0  3.0  5.0       2        NaN   17  \n","4  3.0   3  4.0  3.0  3.0       1        NaN   17  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-017ecaa1-c042-49c8-9c1b-357dc52ffcc9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>A1</th>\n","      <th>A2</th>\n","      <th>A3</th>\n","      <th>A4</th>\n","      <th>A5</th>\n","      <th>C1</th>\n","      <th>C2</th>\n","      <th>C3</th>\n","      <th>C4</th>\n","      <th>...</th>\n","      <th>N4</th>\n","      <th>N5</th>\n","      <th>O1</th>\n","      <th>O2</th>\n","      <th>O3</th>\n","      <th>O4</th>\n","      <th>O5</th>\n","      <th>gender</th>\n","      <th>education</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>61617</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>6</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>61618</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>61620</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>61621</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>61622</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>17</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 29 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-017ecaa1-c042-49c8-9c1b-357dc52ffcc9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-017ecaa1-c042-49c8-9c1b-357dc52ffcc9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-017ecaa1-c042-49c8-9c1b-357dc52ffcc9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["bifi.drop(['gender', 'education', 'age' ] , axis = 1 )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"kBWLB-2Lr5ko","executionInfo":{"status":"ok","timestamp":1671646708288,"user_tz":-330,"elapsed":19,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"22fef698-19d7-4666-ca3a-3dc3c64b9058"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0   A1   A2   A3   A4   A5   C1   C2   C3   C4  ...   N1   N2  \\\n","0          61617  2.0  4.0  3.0  4.0  4.0  2.0  3.0  3.0  4.0  ...  3.0  4.0   \n","1          61618  2.0  4.0  5.0  2.0  5.0  5.0  4.0  4.0  3.0  ...  3.0  3.0   \n","2          61620  5.0  4.0  5.0  4.0  4.0  4.0  5.0  4.0  2.0  ...  4.0  5.0   \n","3          61621  4.0  4.0  6.0  5.0  5.0  4.0  4.0  3.0  5.0  ...  2.0  5.0   \n","4          61622  2.0  3.0  3.0  4.0  5.0  4.0  4.0  5.0  3.0  ...  2.0  3.0   \n","...          ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   \n","2795       67551  6.0  1.0  3.0  3.0  3.0  6.0  6.0  6.0  1.0  ...  1.0  1.0   \n","2796       67552  2.0  4.0  4.0  3.0  5.0  2.0  3.0  4.0  4.0  ...  NaN  3.0   \n","2797       67556  2.0  3.0  5.0  2.0  5.0  5.0  5.0  5.0  1.0  ...  3.0  4.0   \n","2798       67559  5.0  2.0  2.0  4.0  4.0  5.0  5.0  5.0  2.0  ...  5.0  5.0   \n","2799       67560  2.0  3.0  1.0  4.0  2.0  5.0  5.0  3.0  3.0  ...  1.0  2.0   \n","\n","       N3   N4   N5   O1  O2   O3   O4   O5  \n","0     2.0  2.0  3.0  3.0   6  3.0  4.0  3.0  \n","1     3.0  5.0  5.0  4.0   2  4.0  3.0  3.0  \n","2     4.0  2.0  3.0  4.0   2  5.0  5.0  2.0  \n","3     2.0  4.0  1.0  3.0   3  4.0  3.0  5.0  \n","4     4.0  4.0  3.0  3.0   3  4.0  3.0  3.0  \n","...   ...  ...  ...  ...  ..  ...  ...  ...  \n","2795  1.0  NaN  1.0  6.0   1  6.0  6.0  1.0  \n","2796  2.0  3.0  3.0  6.0   3  5.0  4.0  2.0  \n","2797  3.0  3.0  1.0  5.0   1  6.0  4.0  3.0  \n","2798  6.0  4.0  1.0  5.0   2  5.0  5.0  1.0  \n","2799  2.0  1.0  1.0  3.0   1  3.0  5.0  1.0  \n","\n","[2800 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-fbe74ad9-dd3d-4331-a85a-58d2ba69822b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>A1</th>\n","      <th>A2</th>\n","      <th>A3</th>\n","      <th>A4</th>\n","      <th>A5</th>\n","      <th>C1</th>\n","      <th>C2</th>\n","      <th>C3</th>\n","      <th>C4</th>\n","      <th>...</th>\n","      <th>N1</th>\n","      <th>N2</th>\n","      <th>N3</th>\n","      <th>N4</th>\n","      <th>N5</th>\n","      <th>O1</th>\n","      <th>O2</th>\n","      <th>O3</th>\n","      <th>O4</th>\n","      <th>O5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>61617</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>6</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>61618</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>61620</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>61621</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>61622</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2795</th>\n","      <td>67551</td>\n","      <td>6.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","      <td>6.0</td>\n","      <td>6.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>6.0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>6.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2796</th>\n","      <td>67552</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","      <td>3</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2797</th>\n","      <td>67556</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2798</th>\n","      <td>67559</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>6.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2799</th>\n","      <td>67560</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2800 rows × 26 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fbe74ad9-dd3d-4331-a85a-58d2ba69822b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fbe74ad9-dd3d-4331-a85a-58d2ba69822b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fbe74ad9-dd3d-4331-a85a-58d2ba69822b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["# to drop 'NAN' values or 'NULL' \n","bifi = bifi.dropna()"],"metadata":{"id":"-j1k9grAs2M9","executionInfo":{"status":"ok","timestamp":1671646708288,"user_tz":-330,"elapsed":18,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["fa = FA(n_factors = 6 , rotation = 'varimax')\n","fa.fit(bifi)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tkS4MtKVvcX7","executionInfo":{"status":"ok","timestamp":1671646708288,"user_tz":-330,"elapsed":18,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"59e79eed-1b58-4ecc-ce86-01a9a2d8420c"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["FactorAnalyzer(n_factors=6, rotation='varimax', rotation_kwargs={})"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["ev, v=fa.get_eigenvalues()\n","ev"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rn1DEqdsxx4y","executionInfo":{"status":"ok","timestamp":1671646708289,"user_tz":-330,"elapsed":16,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"dfb984ea-2fdc-4a19-a469-86cf1abf9b17"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5.10750785, 2.81317969, 2.20354941, 1.94261472, 1.62168815,\n","       1.26441252, 1.12318605, 1.0177699 , 0.86519396, 0.80615722,\n","       0.77272584, 0.74848277, 0.69772758, 0.67597562, 0.65985871,\n","       0.64254734, 0.62883126, 0.56870612, 0.5544319 , 0.52680286,\n","       0.51549204, 0.49137009, 0.47480203, 0.43291775, 0.4197635 ,\n","       0.40421542, 0.38358228, 0.37254119, 0.26396621])"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["bifi.shape[1]+1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5GBnJTNazLEp","executionInfo":{"status":"ok","timestamp":1671646708289,"user_tz":-330,"elapsed":15,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"4e85ce6c-0dce-4eab-9747-7db2e1f4ce37"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["30"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["plt.scatter(range(1,bifi.shape[1]+1),ev)\n","plt.plot(range(1,bifi.shape[1]+1),ev)\n","plt.title(\" Factor Analysis \")\n","plt.xlabel(\" Factors\")\n","plt.ylabel(\" Eigen Values\")\n","plt.grid()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"R4sHOMPczirJ","executionInfo":{"status":"ok","timestamp":1671646709085,"user_tz":-330,"elapsed":810,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"275479e5-8e58-4ac0-e563-bd1da1ef67e1"},"execution_count":67,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# **Clustering**"],"metadata":{"id":"Yz6SLor90k-E"}},{"cell_type":"code","source":["from sklearn.cluster import KMeans as KM\n","from sklearn.preprocessing import MinMaxScaler"],"metadata":{"id":"eRX7DB_66Js-","executionInfo":{"status":"ok","timestamp":1671648008577,"user_tz":-330,"elapsed":392,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":98,"outputs":[]},{"cell_type":"code","source":["ds = pd.read_csv(\"/weight-height.csv\")"],"metadata":{"id":"GIHVAUX_7S58","executionInfo":{"status":"ok","timestamp":1671647142085,"user_tz":-330,"elapsed":387,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["ds.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"B43Q_Vm_7ead","executionInfo":{"status":"ok","timestamp":1671647144313,"user_tz":-330,"elapsed":9,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"b6893278-6926-4c2a-a08e-7a30d2880df0"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Gender     Height      Weight\n","0   Male  73.847017  241.893563\n","1   Male  68.781904  162.310473\n","2   Male  74.110105  212.740856\n","3   Male  71.730978  220.042470\n","4   Male  69.881796  206.349801"],"text/html":["\n","  <div id=\"df-b1e7f670-56ef-46d6-a718-47e63cd03ba9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Male</td>\n","      <td>73.847017</td>\n","      <td>241.893563</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>68.781904</td>\n","      <td>162.310473</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>74.110105</td>\n","      <td>212.740856</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>71.730978</td>\n","      <td>220.042470</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Male</td>\n","      <td>69.881796</td>\n","      <td>206.349801</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1e7f670-56ef-46d6-a718-47e63cd03ba9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b1e7f670-56ef-46d6-a718-47e63cd03ba9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b1e7f670-56ef-46d6-a718-47e63cd03ba9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["scaler = MinMaxScaler()\n","ds[['Height']]=scaler.fit(ds[['Height']]).transform(ds[['Height']])\n","ds[['Weight']]=scaler.fit(ds[['Weight']]).transform(ds[['Weight']])"],"metadata":{"id":"GF0EzDLK8IW8","executionInfo":{"status":"ok","timestamp":1671647912322,"user_tz":-330,"elapsed":377,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["ds.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"LDFaRfH6-u4h","executionInfo":{"status":"ok","timestamp":1671647933119,"user_tz":-330,"elapsed":10,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"87718f1a-c640-4bd7-e6be-4c88f4e59ea3"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Height    Weight\n","0  0.791728  0.863139\n","1  0.586958  0.475476\n","2  0.802364  0.721131\n","3  0.706182  0.756699\n","4  0.631424  0.689999"],"text/html":["\n","  <div id=\"df-7c8fc6f1-0944-4215-a1dc-8c65e97e53ba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.791728</td>\n","      <td>0.863139</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.586958</td>\n","      <td>0.475476</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.802364</td>\n","      <td>0.721131</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.706182</td>\n","      <td>0.756699</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.631424</td>\n","      <td>0.689999</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c8fc6f1-0944-4215-a1dc-8c65e97e53ba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7c8fc6f1-0944-4215-a1dc-8c65e97e53ba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7c8fc6f1-0944-4215-a1dc-8c65e97e53ba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["km=KM(n_clusters=3)"],"metadata":{"id":"noH3_GPl-2Tl","executionInfo":{"status":"ok","timestamp":1671648046241,"user_tz":-330,"elapsed":375,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":100,"outputs":[]},{"cell_type":"code","source":["y_predicted = km.fit_predict(ds[['Height','Weight']])\n","y_predicted"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eJ6RMxaQ_QIb","executionInfo":{"status":"ok","timestamp":1671648224056,"user_tz":-330,"elapsed":1094,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"08a54f50-bf97-4f1c-93ab-93812569209b"},"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2, 0, 2, ..., 1, 0, 1], dtype=int32)"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["df['cluster']=y_predicted\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"UfG6nWhW_8Sz","executionInfo":{"status":"ok","timestamp":1671648316156,"user_tz":-330,"elapsed":408,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"861b6be2-b02c-4f50-fb48-6d42bb7f4a47"},"execution_count":105,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Gender     Height      Weight  cluster\n","0   Male  73.847017  241.893563        2\n","1   Male  68.781904  162.310473        0\n","2   Male  74.110105  212.740856        2\n","3   Male  71.730978  220.042470        2\n","4   Male  69.881796  206.349801        2"],"text/html":["\n","  <div id=\"df-a8df6c55-c639-4968-88f1-b6d8a05ae525\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","      <th>cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Male</td>\n","      <td>73.847017</td>\n","      <td>241.893563</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>68.781904</td>\n","      <td>162.310473</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>74.110105</td>\n","      <td>212.740856</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>71.730978</td>\n","      <td>220.042470</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Male</td>\n","      <td>69.881796</td>\n","      <td>206.349801</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8df6c55-c639-4968-88f1-b6d8a05ae525')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a8df6c55-c639-4968-88f1-b6d8a05ae525 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a8df6c55-c639-4968-88f1-b6d8a05ae525');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["df0 = df[df.cluster==0]\n","df1 =df[df.cluster==1]\n","df2=df[df.cluster==2]"],"metadata":{"id":"WdWXKtcfASLC","executionInfo":{"status":"ok","timestamp":1671648661314,"user_tz":-330,"elapsed":1,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}}},"execution_count":110,"outputs":[]},{"cell_type":"code","source":["plt.scatter(df0.Height , df0.Weight)\n","plt.scatter(df1.Height , df1.Weight)\n","plt.scatter(df2.Height , df2.Weight)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"rwiXlp3BAuA0","executionInfo":{"status":"ok","timestamp":1671648874244,"user_tz":-330,"elapsed":10,"user":{"displayName":"Pratik Shah","userId":"18097316087086550675"}},"outputId":"1d5f2f28-af13-464f-d5e2-5f99156d1cd4"},"execution_count":112,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"7-mPfHUOBuSO"}}],"metadata":{"colab":{"provenance":[{"file_id":"1HJ0sfkQQ_tQc3FB7v2LTf7mM5l9CPpZq","timestamp":1671035602299}],"authorship_tag":"ABX9TyMsxl93dI3ks1TyMIo50fy1"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
